// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
   id Int @id @default(autoincrement())
   email String @unique
   name String
   senha String
}

model Tarefa {
  id            String          @id @default(uuid()) // PK
  titulo        String          @db.VarChar(30)
  comentarios   String?         @db.Text
  descricao     String?         @db.Text
  dono          String          @db.VarChar(50)
  dataCriacao   DateTime        @default(now())
  dataTarefa    DateTime
  dataConclusao DateTime?
  ehRecorrente  Boolean
  prioridade    Prioridade
  status        Status

  categorias    TarefaCategoria[]

  @@map("tarefa") 
}

model Categoria {
  id   String          @id @default(uuid()) // PK
  nome String          @db.VarChar(200)

  
  tarefas TarefaCategoria[]

  @@map("categoria") 
}

model TarefaCategoria {
  tarefaId    String  
  categoriaId String  

  tarefa      Tarefa   @relation(fields: [tarefaId], references: [id], onDelete: Cascade)
  categoria   Categoria @relation(fields: [categoriaId], references: [id], onDelete: Cascade)

  @@id([tarefaId, categoriaId]) 
  @@map("tarefa_categoria") 
}

enum Prioridade {
  BAIXA
  MEDIA
  ALTA
}

enum Status {
  PENDENTE
  EM_PROGRESSO
  CONCLUIDA
}
